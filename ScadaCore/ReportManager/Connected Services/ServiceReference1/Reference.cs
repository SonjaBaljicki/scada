//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReportManager.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmEntity", Namespace="http://schemas.datacontract.org/2004/07/ScadaCore.model")]
    [System.SerializableAttribute()]
    public partial class AlarmEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReportManager.ServiceReference1.AlarmType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReportManager.ServiceReference1.AlarmType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmType", Namespace="http://schemas.datacontract.org/2004/07/ScadaCore.model.enums")]
    public enum AlarmType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LOW = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HIGH = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagEntity", Namespace="http://schemas.datacontract.org/2004/07/ScadaCore.model")]
    [System.SerializableAttribute()]
    public partial class TagEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReportManager.ServiceReference1.TagType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReportManager.ServiceReference1.TagType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagType", Namespace="http://schemas.datacontract.org/2004/07/ScadaCore.model.enums")]
    public enum TagType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ANALOG_INPUT = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ANALOG_OUTPUT = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DIGITAL_INPUT = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DIGITAL_OUTPUT = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IReportService")]
    public interface IReportService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetAlarmsByDateRange", ReplyAction="http://tempuri.org/IReportService/GetAlarmsByDateRangeResponse")]
        ReportManager.ServiceReference1.AlarmEntity[] GetAlarmsByDateRange(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetAlarmsByDateRange", ReplyAction="http://tempuri.org/IReportService/GetAlarmsByDateRangeResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.AlarmEntity[]> GetAlarmsByDateRangeAsync(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetAlarmsByPriority", ReplyAction="http://tempuri.org/IReportService/GetAlarmsByPriorityResponse")]
        ReportManager.ServiceReference1.AlarmEntity[] GetAlarmsByPriority(int priority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetAlarmsByPriority", ReplyAction="http://tempuri.org/IReportService/GetAlarmsByPriorityResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.AlarmEntity[]> GetAlarmsByPriorityAsync(int priority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetTagsByDateRange", ReplyAction="http://tempuri.org/IReportService/GetTagsByDateRangeResponse")]
        ReportManager.ServiceReference1.TagEntity[] GetTagsByDateRange(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetTagsByDateRange", ReplyAction="http://tempuri.org/IReportService/GetTagsByDateRangeResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagEntity[]> GetTagsByDateRangeAsync(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetLatestAnalogInputTags", ReplyAction="http://tempuri.org/IReportService/GetLatestAnalogInputTagsResponse")]
        ReportManager.ServiceReference1.TagEntity[] GetLatestAnalogInputTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetLatestAnalogInputTags", ReplyAction="http://tempuri.org/IReportService/GetLatestAnalogInputTagsResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagEntity[]> GetLatestAnalogInputTagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetLatestDigitalInputTags", ReplyAction="http://tempuri.org/IReportService/GetLatestDigitalInputTagsResponse")]
        ReportManager.ServiceReference1.TagEntity[] GetLatestDigitalInputTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetLatestDigitalInputTags", ReplyAction="http://tempuri.org/IReportService/GetLatestDigitalInputTagsResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagEntity[]> GetLatestDigitalInputTagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetTagValuesByIdentifier", ReplyAction="http://tempuri.org/IReportService/GetTagValuesByIdentifierResponse")]
        ReportManager.ServiceReference1.TagEntity[] GetTagValuesByIdentifier(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetTagValuesByIdentifier", ReplyAction="http://tempuri.org/IReportService/GetTagValuesByIdentifierResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagEntity[]> GetTagValuesByIdentifierAsync(string tagName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportServiceChannel : ReportManager.ServiceReference1.IReportService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportServiceClient : System.ServiceModel.ClientBase<ReportManager.ServiceReference1.IReportService>, ReportManager.ServiceReference1.IReportService {
        
        public ReportServiceClient() {
        }
        
        public ReportServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ReportManager.ServiceReference1.AlarmEntity[] GetAlarmsByDateRange(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetAlarmsByDateRange(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.AlarmEntity[]> GetAlarmsByDateRangeAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetAlarmsByDateRangeAsync(startDate, endDate);
        }
        
        public ReportManager.ServiceReference1.AlarmEntity[] GetAlarmsByPriority(int priority) {
            return base.Channel.GetAlarmsByPriority(priority);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.AlarmEntity[]> GetAlarmsByPriorityAsync(int priority) {
            return base.Channel.GetAlarmsByPriorityAsync(priority);
        }
        
        public ReportManager.ServiceReference1.TagEntity[] GetTagsByDateRange(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetTagsByDateRange(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagEntity[]> GetTagsByDateRangeAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetTagsByDateRangeAsync(startDate, endDate);
        }
        
        public ReportManager.ServiceReference1.TagEntity[] GetLatestAnalogInputTags() {
            return base.Channel.GetLatestAnalogInputTags();
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagEntity[]> GetLatestAnalogInputTagsAsync() {
            return base.Channel.GetLatestAnalogInputTagsAsync();
        }
        
        public ReportManager.ServiceReference1.TagEntity[] GetLatestDigitalInputTags() {
            return base.Channel.GetLatestDigitalInputTags();
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagEntity[]> GetLatestDigitalInputTagsAsync() {
            return base.Channel.GetLatestDigitalInputTagsAsync();
        }
        
        public ReportManager.ServiceReference1.TagEntity[] GetTagValuesByIdentifier(string tagName) {
            return base.Channel.GetTagValuesByIdentifier(tagName);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagEntity[]> GetTagValuesByIdentifierAsync(string tagName) {
            return base.Channel.GetTagValuesByIdentifierAsync(tagName);
        }
    }
}
